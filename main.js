(()=>{"use strict";var e={baseUrl:"https://nomoreparties.co/v1/wff-cohort-2",headers:{authorization:"29e47ff3-c405-4d45-9bbb-503bd9191003","Content-Type":"application/json"}},t=function(){return fetch("".concat(e.baseUrl,"/cards"),{headers:e.headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))};function n(e,t,n,r,o){var c=document.getElementById("card-template").content.firstElementChild.cloneNode(!0),a=c.querySelector(".card__title"),u=c.querySelector(".card__image");a.textContent=e.name,u.src=e.link,u.alt=e.name;var i=c.querySelector(".card__like-count");i.textContent=e.likes.length;var s=c.querySelector(".card__like-button");s.addEventListener("click",(function(){n(s,i,e._id),i.textContent=e.likes.length}));var l=e._id;return o===e.owner._id?c.querySelector(".card__delete-button").addEventListener("click",(function(){t(c,l)})):c.querySelector(".card__delete-button").style.display="none",u.addEventListener("click",(function(){r(c,u)})),c}function r(t,n,r){t.classList.contains("card__like-button_is-active")?function(t){var n="".concat(e.baseUrl,"/cards/likes/").concat(t);return fetch(n,{method:"DELETE",headers:e.headers}).then((function(e){if(e.ok)return e.json()})).catch((function(e){console.error("Ошибка снятия лайка:",e)}))}(r).then((function(e){t.classList.remove("card__like-button_is-active"),n.textContent=e.likes.length})):function(t){var n="".concat(e.baseUrl,"/cards/likes/").concat(t);return fetch(n,{method:"PUT",headers:e.headers}).then((function(e){if(e.ok)return e.json()})).catch((function(e){console.error("Ошибка постановки лайка:",e)}))}(r).then((function(e){t.classList.add("card__like-button_is-active"),n.textContent=e.likes.length}))}function o(e,t){(function(e){return fetch("https://nomoreparties.co/v1/wff-cohort-2/cards/".concat(e),{method:"DELETE",headers:{authorization:"29e47ff3-c405-4d45-9bbb-503bd9191003"}}).then((function(e){if(e.ok)return e.json();throw new Error("Ошибка: ".concat(e.status))}))})(t).then((function(){e.remove()})).catch((function(e){console.error("Ошибка удаления карточки:",e)}))}function c(e){e.classList.add("popup_is-animated"),e.classList.add("popup_is-opened"),document.addEventListener("keydown",u),document.addEventListener("click",i)}function a(e){e.classList.remove("popup_is-opened"),document.removeEventListener("keydown",u),document.removeEventListener("click",i)}var u=function(e){"Escape"===e.code&&a(document.querySelector(".popup_is-opened"))},i=function(e){var t=e.target;t.classList.contains("popup_is-opened")&&a(t)};function s(e,t){var n=Array.from(e.querySelectorAll(t.inputSelector)),r=e.querySelector(t.submitButtonSelector);n.forEach((function(n){l(e,n,t)})),r&&(r.classList.add(t.inactiveButtonClass),r.disabled=!0)}function l(e,t,n){var r=e.querySelector(".".concat(t.id,"-error"));r.textContent="",r.classList.remove(n.errorClass),t.classList.remove(n.inputErrorClass)}function d(e,t,n){e.every((function(e){return e.validity.valid}))?(t.classList.remove(n.inactiveButtonClass),t.disabled=!1):(t.classList.add(n.inactiveButtonClass),t.disabled=!0)}function p(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var f=document.querySelector(".popup_type_edit"),_=document.querySelector(".popup_type_new-card"),m=document.querySelector(".popup_type_image"),v=document.querySelector(".popup_type_avatar"),y=f.querySelector(".popup__form"),h=_.querySelector(".popup__form"),b=v.querySelector(".popup__form"),S=document.querySelector(".profile__edit-button"),C=document.querySelectorAll(".popup__close"),q=document.querySelector(".profile__add-button"),E=document.querySelector(".popup__image"),k=document.querySelector(".popup__caption"),L=document.querySelector(".profile__image");L.addEventListener("click",(function(){c(v)}));var g=document.querySelector(".places__list"),x={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"};function j(e,t){c(m);var n=e.querySelector(".card__title");E.src=t.src,k.textContent=n.textContent,m.src=t.src,m.alt=n.textContent}function A(e,t,r,o){e.forEach((function(e){var c=n(e,t,r,o,userInfo._id);g.appendChild(c)}))}!function(e){Array.from(document.querySelectorAll(e.formSelector)).forEach((function(t){t.addEventListener("submit",(function(e){e.preventDefault()})),function(e,t){var n=Array.from(e.querySelectorAll(t.inputSelector)),r=e.querySelector(t.submitButtonSelector);s(e,t),n.forEach((function(o){o.addEventListener("input",(function(){!function(e,t,n){t.validity.valid?l(e,t,n):function(e,t,n,r){var o=e.querySelector(".".concat(t.id,"-error"));o.textContent=n,o.classList.add(r.errorClass),t.classList.add(r.inputErrorClass)}(e,t,t.validationMessage,n)}(e,o,t),d(n,r,t)}))})),e.addEventListener("reset",(function(){s(e,t)})),d(n,r,t)}(t,e)}))}(x),C.forEach((function(e){e.addEventListener("click",(function(){a(e.closest(".popup"))}))})),S.addEventListener("click",(function(){c(f),w.value=P.textContent,T.value=U.textContent,s(y,x)}));var w=y.querySelector(".popup__input_type_name"),T=y.querySelector(".popup__input_type_description"),P=document.querySelector(".profile__title"),U=document.querySelector(".profile__description");w.value=P.textContent,T.value=U.textContent,Promise.all([fetch("".concat(e.baseUrl,"/users/me"),{headers:e.headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))})),t()]).then((function(e){var n,c,a=(c=2,function(e){if(Array.isArray(e))return e}(n=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,c,a,u=[],i=!0,s=!1;try{if(c=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;i=!1}else for(;!(i=(r=c.call(n)).done)&&(u.push(r.value),u.length!==t);i=!0);}catch(e){s=!0,o=e}finally{try{if(!i&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(s)throw o}}return u}}(n,c)||function(e,t){if(e){if("string"==typeof e)return p(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?p(e,t):void 0}}(n,c)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),u=a[0],i=a[1];return window.userInfo=u,P.textContent=u.name,U.textContent=u.about,L.style.backgroundImage="url(".concat(u.avatar,")"),g.innerHTML="",A(i,o,r,j),t()})).catch((function(e){console.error("Произошла ошибка:",e)})),y.addEventListener("submit",(function(t){t.preventDefault();var n=y.querySelector(".popup__button");n.textContent="Сохранение...",setTimeout((function(){var t,r;(t=w.value,r=T.value,fetch("".concat(e.baseUrl,"/users/me"),{method:"PATCH",headers:e.headers,body:JSON.stringify({name:t,about:r})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))).then((function(e){P.textContent=e.name,U.textContent=e.about})).finally((function(){n.textContent="Сохранить"})),a(f),s(y,x)}),1e3)})),q.addEventListener("click",(function(){c(_),h.reset(),s(h,x)})),h.addEventListener("submit",(function(t){t.preventDefault();var c=t.target,u=new FormData(c),i=Object.fromEntries(u),s=i["place-name"],l=i.link,d=h.querySelector(".popup__button");d.textContent="Сохранение...",setTimeout((function(){var t,u;(t=s,u=l,fetch("".concat(e.baseUrl,"/cards"),{method:"POST",headers:e.headers,body:JSON.stringify({name:t,link:u})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))).then((function(e){var t=n(e,o,r,j,userInfo._id);g.prepend(t),c.reset(),a(_)})).catch((function(e){console.error("Ошибка добавления карточки:",e)})).finally((function(){d.textContent="Сохранить"})),a(_)}),1e3)})),document.querySelectorAll(".popup").forEach((function(e){return e.classList.add("popup_is-animated")})),b.addEventListener("submit",(function(t){t.preventDefault();var n=t.target.querySelector(".popup__input_type_avatar-url").value,r=b.querySelector(".popup__button");r.textContent="Сохранение...",setTimeout((function(){(function(t){return fetch("".concat(e.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:e.headers,body:JSON.stringify({avatar:t})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))})(n).then((function(){L.style.backgroundImage="url(".concat(n,")"),a(v)})).catch((function(e){console.error("Ошибка обновления аватара:",e)})).finally((function(){r.textContent="Сохранить"}))}))}),1e3)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,